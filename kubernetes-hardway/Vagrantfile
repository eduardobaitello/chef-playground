# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-ohai")
  raise "vagrant-ohai plugin is not installed! Install with 'vagrant plugin install vagrant-ohai'"
end

NODE_SCRIPT = <<EOF.freeze
  echo "Preparing node..."
  # Install chef client
  wget https://omnitruck.chef.io/install.sh | sudo bash -s -- -v 16.12
EOF

def set_hostname(server)
  server.vm.provision 'shell', inline: "hostname #{server.vm.hostname}"
end

Vagrant.configure(2) do |config|

config.vm.define 'master' do |master|
    master.vm.box = 'peru/ubuntu-20.04-server-amd64'
    master.vm.box_url = 'https://app.vagrantup.com/peru/boxes/ubuntu-20.04-server-amd64'
    master.vm.box_version = '20210401.01'
    master.vm.hostname = 'master'
    master.vm.network :private_network, ip: '192.168.10.100'
    master.vm.network "forwarded_port", guest: 6443, host: 6443
    master.vm.provision :shell, inline: NODE_SCRIPT.dup
    master.vm.provider :virtualbox do |vb|
      vb.gui = false
      vb.memory = 3072
      vb.cpus = 2
    end
  set_hostname(master)
end

config.vm.define 'node1' do |node1|
    node1.vm.box = 'peru/ubuntu-20.04-server-amd64'
    node1.vm.box_url = 'https://app.vagrantup.com/peru/boxes/ubuntu-20.04-server-amd64'
    node1.vm.box_version = '20210401.01'
    node1.vm.hostname = 'node1'
    node1.vm.network :private_network, ip: '192.168.10.10'
    node1.vm.provision :shell, inline: NODE_SCRIPT.dup
    node1.vm.provider :virtualbox do |vb|
      vb.gui = false
      vb.memory = 2048
      vb.cpus = 1
    end
  set_hostname(node1)
end

config.vm.define 'node2' do |node2|
    node2.vm.box = 'peru/ubuntu-20.04-server-amd64'
    node2.vm.box_url = 'https://app.vagrantup.com/peru/boxes/ubuntu-20.04-server-amd64'
    node2.vm.box_version = '20210401.01'
    node2.vm.hostname = 'node2'
    node2.vm.network :private_network, ip: '192.168.10.20'
    node2.vm.provision :shell, inline: NODE_SCRIPT.dup
    node2.vm.provider :virtualbox do |vb|
      vb.gui = false
      vb.memory = 2048
      vb.cpus = 1
    end
  set_hostname(node2)
end

end
